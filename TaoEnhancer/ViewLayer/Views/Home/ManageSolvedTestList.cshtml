@using Common
@{
    ViewData["Title"] = "Správa vyřešených testů";
}

@functions {

    public List<(string, string, string, string, string, string, string)> LoadSolvedTests()
    {
        List<(string, string, string, string, string, string, string)> solvedTestList = new List<(string, string, string, string, string, string, string)>();

        foreach (var directory in Directory.GetDirectories(Settings.GetResultsPath()))
        {
            foreach (var file in Directory.GetFiles(directory))
            {
                string extension = ExtractFileExtension(file);
                if (extension == "xml")
                {
                    string timeStamp = "";
                    string testStudentIdentifier = "";

                    XmlReader xmlReader = XmlReader.Create(file);
                    while (xmlReader.Read())
                    {
                        if (xmlReader.Name == "context")
                        {
                            testStudentIdentifier = xmlReader.GetAttribute("sourcedId");
                        }

                        if (xmlReader.Name == "testResult" && xmlReader.GetAttribute("datestamp") != null)
                        {
                            timeStamp = xmlReader.GetAttribute("datestamp");
                        }
                    }

                    string[] attemptIdentifierSplitByUnderscore = ExtractFileNameWithoutExtension(file).Split("_");
                    string login = "", name = "", surname = "", email = "";

                    foreach (var studentFile in Directory.GetFiles(Settings.GetStudentsPath()))
                    {
                        string studentFileExtension = ExtractFileExtension(studentFile);
                        if (studentFileExtension == "rdf")
                        {
                            IGraph g = new Graph();
                            FileLoader.Load(g, studentFile);
                            IEnumerable<INode> nodes = g.AllNodes;
                            int nodeLine = 1;
                            foreach (INode node in nodes)
                            {
                                if (nodeLine == 1)
                                {
                                    string[] splitByHashtag = node.ToString().Split("#");
                                    if(splitByHashtag[1] != testStudentIdentifier)
                                    {
                                        break;
                                    }
                                }
                                if (nodeLine == 3)
                                {
                                    login = node.ToString();
                                }
                                else if (nodeLine == 9)
                                {
                                    name = node.ToString();
                                }
                                else if (nodeLine == 11)
                                {
                                    surname = node.ToString();
                                }
                                else if (nodeLine == 13)
                                {
                                    email = node.ToString();
                                }
                                nodeLine++;
                            }
                        }
                    }

                    solvedTestList.Add((ExtractFileName(directory).ToString(), timeStamp, attemptIdentifierSplitByUnderscore[2], login, name + " " + surname, email, testStudentIdentifier));
                }
            }
        }

        return solvedTestList;
    }

    public string ExtractFileName(string file)
    {
        string[] fileSplitBySlash = file.Split(@"\");
        return fileSplitBySlash[fileSplitBySlash.Length - 1];
    }


    public string ExtractFileExtension(string file)
    {
        string[] fileSplitByDot = file.Split(@".");
        return fileSplitByDot[fileSplitByDot.Length - 1];
    }

    public string ExtractFileNameWithoutExtension(string file)
    {
        string[] fileSplitBySlash = file.Split(@"\");
        string[] fileSplitByDot = fileSplitBySlash[fileSplitBySlash.Length - 1].Split(@".");
        return fileSplitByDot[fileSplitByDot.Length - 2];
    }

    public string GetTestNumberIdentifier(string testNameIdentifier)
    {
        foreach (var directory in Directory.GetDirectories(Settings.GetTestTestsPath(testNameIdentifier)))
        {
            return ExtractFileName(directory);
        }
        return "Nastala neočekávaná chyba.";
    }
}

<h1>@ViewData["Title"]</h1>

<div class="managesolvedtestlist-to-teachermenu"><a asp-area="" asp-controller="Home" asp-action="TeacherMenu">Zpět</a></div>

<div class="managesolvedtestlist-student-details">
    Student:
    <br>
    <div id="managesolvedtestlist-student-name">Jméno studenta:</div>
    <br>
    <div id="managesolvedtestlist-student-login">Login studenta:</div>
    <br>
    <div id="managesolvedtestlist-student-email">Email studenta:</div>
</div>

<div class="managesolvedtestlist-table">
    <table class="table table-bordered">
        <tr>
            <th>Jmenný identifikátor testu</th>
            <th>Časová známka</th>
            <th>Identifikátor pokusu</th>
            <th>Login studenta</th>
            <th>Detaily</th>
            <th>Správa testu</th>
        </tr>
        @{
            int i = 0;
            foreach ((string, string, string, string, string, string, string) solvedTest in LoadSolvedTests())
            {
                <tr>
                    <td>@solvedTest.Item1</td>
                    <td>@solvedTest.Item2</td>
                    <td>@solvedTest.Item3</td>
                    <td>@solvedTest.Item4</td>
                    <td><button class="item-details-button" id="@i" onclick="loadSolvedTestDetails('@solvedTest.Item4', '@solvedTest.Item5', '@solvedTest.Item6')">Detaily</button></td>
                    <td><button class="manage-test-button"><a 
                        asp-area="" 
                        asp-controller="Home" 
                        asp-action="ManageSolvedTest" 
                        asp-route-testNameIdentifier="@solvedTest.Item1" 
                        asp-route-testNumberIdentifier="@GetTestNumberIdentifier(@solvedTest.Item1)"
                        asp-route-deliveryExecutionIdentifier="@solvedTest.Item3"
                        asp-route-studentIdentifier="@solvedTest.Item7">Správa testu</a></button></td>
                </tr>
                i++;
            }
        }
    </table>
</div>